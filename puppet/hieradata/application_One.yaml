---
logoutput:                     &logoutput                     true

# create 2 managed servers and assign them to the machines
managed_servers_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "server"
         script:               'createServer.py'
      wlsServer1_node1:
         weblogic_object_name: "wlsServer1"
         params:
            - "javaArguments    = '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer1.out -Dweblogic.Stderr=/data/logs/wlsServer1_err.out'"
            - "wlsServerName    = 'wlsServer1'"
            - "machineName      = 'Node1'"
            - "listenAddress    = 8001"
            - "nodeMgrLogDir    = '/data/logs'"
      wlsServer2_node2:
         weblogic_object_name: "wlsServer2"
         params:
            - "javaArguments    = '-XX:PermSize=256m -XX:MaxPermSize=256m -Xms752m -Xmx752m -Dweblogic.Stdout=/data/logs/wlsServer2.out -Dweblogic.Stderr=/data/logs/wlsServer2_err.out'"
            - "wlsServerName    = 'wlsServer2'"
            - "machineName      = 'Node2'"
            - "listenAddress    = 8001"
            - "nodeMgrLogDir    = '/data/logs'"

# create cluster and assign the managed servers
cluster_instances:
   - clusterOne:
      cluster_web:
         weblogic_object_name: "WebCluster"
         log_output:           *logoutput
         weblogic_type:        "cluster"
         script:               'createCluster.py'
         params:
            - "clusterName      = 'WebCluster'"
            - "clusterNodes     = 'wlsServer1,wlsServer2'"


# create jms servers with a server,file persistence target
jms_servers_instances:
   - clusterOne:
      global_parameters:
      jmsServerNode1:
         log_output:           *logoutput
         weblogic_type:        "jmsserver"
         script:               'createJmsServer.py'
         weblogic_object_name: "jmsServer1"
         params:
            - "target           = 'wlsServer1'"
            - "jmsServerName    = 'jmsServer1'"
            - "targetType       = 'Server'"
      jmsServerNode2:
         log_output:           *logoutput
         weblogic_type:        "jmsserver"
         script:               'createJmsServer.py'
         weblogic_object_name: "jmsServer2"
         params:
            - "target           = 'wlsServer2'"
            - "jmsServerName    = 'jmsServer2'"
            - "targetType       = 'Server'"

#target, serviceType, storeType,storeName,name

jms_saf_agents_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "safagent"
         script:               'createSAFAgents.py'
         params:
            - "serviceType      = 'Both'"
      jmsSAFAgent1:
         weblogic_object_name: "jmsSAFAgent1"
         params:
            - "target           = 'wlsServer1'"
            - "name             = 'jmsSAFAgent1'"
      jmsSAFAgent2:
         weblogic_object_name: "jmsSAFAgent2"
         params:
            - "target           = 'wlsServer2'"
            - "name             = 'jmsSAFAgent2'"

#
# create jms module for cluster 
jms_module_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmsmodule"
         script:               'createJmsModule.py'
         params:
            - "jmsModuleName    = 'jmsClusterModule'"
      jmsClusterModule:
         weblogic_object_name: "jmsClusterModule"
         params:
            - "target           = 'WebCluster'"
            - "targetType       = 'Cluster'"

# create jms subdeployment for the jms module 
jms_module_subdeployments_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmssubdeployment"
         script:               'createJmsSubDeployment.py'
         params:
            - "jmsModuleName    = 'jmsClusterModule'"
      SubDeploymentWLSforJmsModule:
         weblogic_object_name: "jmsClusterModule/wlsServers"
         params:
            - "target           = 'WebCluster'"
            - "targetType       = 'Cluster'"
            - "subName          = 'wlsServers'"
      SubDeploymentJMSforJmsModule:
         weblogic_object_name: "jmsClusterModule/jmsServers"
         params:
            - "target           = 'jmsServer1,jmsServer2'"
            - "targetType       = 'JMSServer'"
            - "subName          = 'jmsServers'"

# create jms quotas for the jms module 
jms_module_quotas_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmsquota"
         script:               'createJmsQuota.py'
         params:
            - "messagesMaximum  = 9223372036854775807"
            - "jmsModuleName    = 'jmsClusterModule'"
            - "shared           = false"
            - "policy           = 'FIFO'"
      QuotaBigforJmsModule:
         weblogic_object_name: "jmsClusterModule/QuotaBig"
         params:
            - "jmsQuotaName     = 'QuotaBig'"
            - "bytesMaximum     = 9223372036854775807"
      QuotaLowforJmsModule:
         weblogic_object_name: "jmsClusterModule/QuotaLow"
         params:
            - "jmsQuotaName     = 'QuotaLow'"
            - "bytesMaximum     = 10000000000"

# create jms connection factory for jms module  
jms_module_cf_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmsobject"
         script:               'createJmsConnectionFactory.py'
         params:
            - "subDeploymentName = 'wlsServers'"
            - "jmsModuleName     = 'jmsClusterModule'"
            - "transacted        = 'false'"
            - "timeout           = 100000"
      createJmsConnectionFactoryforJmsModule:
         weblogic_object_name: "cf"
         params:
            - "cfName            = 'cf'"
            - "cfJNDIName        = 'jms/cf'"

jms_module_jms_errors_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmsobject"
         script:               'createJmsQueueOrTopic.py'
         params:
            - "subDeploymentName = 'jmsServers'"
            - "jmsModuleName     = 'jmsClusterModule'"
            - "distributed       = 'true'"
            - "balancingPolicy   = 'Round-Robin'"
            - "useRedirect       = 'false'"
      createJmsErrorQueueforJmsModule:
         weblogic_object_name: "ErrorQueue"
         params:
            - "jmsName           = 'ErrorQueue'"
            - "jmsJNDIName       = 'jms/ErrorQueue'"
            - "jmsType           = 'queue'"


jms_module_foreign_server_instances:
 - clusterOne:
    global_parameters:
       log_output:           *logoutput
       weblogic_type:        "foreignserver"
       script:               'createJmsForeignServer.py'
       params:
          - "jmsModuleName    = 'jmsClusterModule'"
    createAQForeignServerJmsModule:
       weblogic_object_name: "jmsClusterModule/AQForeignServer"
       params:
          - "subDeployment             = 'jmsServers'"
          - "JNDIInitialContextFactory = 'oracle.jms.AQjmsInitialContextFactory'"
          - "JNDIpropertyName          = 'datasource'"
          - "JNDIpropertyValue         = 'jdbc/hrDS'"
          - "name                      = 'AQForeignServer'"
    createForeignServerJmsModule:
       weblogic_object_name: "jmsClusterModule/ForeignServer"
       params:
          - "name              = 'ForeignServer'"
          - "connectionURL     = 't3://10.10.10.1:7001'"

jms_module_foreign_server_objects_instances:
 - clusterOne:
    global_parameters:
       log_output:           *logoutput
       weblogic_type:        "foreignserver_object"
       script:               'createJmsForeignServerObject.py'
       params:
          - "jmsModuleName    = 'jmsClusterModule'"
    createAQForeignServerObjectJmsModule:
       weblogic_object_name: "jmsClusterModule/AQForeignServer/TestQueue"
       params:
          - "fsName             = 'AQForeignServer'"
          - "fsType             = 'destination'"
          - "objectName         = 'TestQueue'"
          - "localJNDI          = 'jms/aq/TestQueue'"
          - "remoteJNDI         = 'Queues/TestQueue'"
    createAQForeignServerObjectJmsModule2:
       weblogic_object_name: "jmsClusterModule/AQForeignServer/XAQueueCF"
       params:
          - "fsName             = 'AQForeignServer'"
          - "fsType             = 'cf'"
          - "objectName         = 'XAQueueCF'"
          - "localJNDI          = 'jms/XAQueueCF'"
          - "remoteJNDI         = 'XAQueueConnectionFactory'"
    createForeignServerObjectJmsModule:
       weblogic_object_name: "jmsClusterModule/ForeignServer/TestQueue"
       params:
          - "fsName             = 'ForeignServer'"
          - "fsType             = 'destination'"
          - "objectName         = 'TestQueue'"
          - "localJNDI          = 'jms/local/TestQueue'"
          - "remoteJNDI         = 'jms/remote/TestQueue'"
    createForeignServerObjectJmsModule2:
       weblogic_object_name: "jmsClusterModule/ForeignServer/CF"
       params:
          - "fsName             = 'ForeignServer'"
          - "fsType             = 'cf'"
          - "objectName         = 'CF'"
          - "localJNDI          = 'jms/local/cf'"
          - "remoteJNDI         = 'jms/remote/cf'"


# create jms objects for jms module  
jms_module_jms_instances:
   - clusterOne:
      global_parameters:
         log_output:           *logoutput
         weblogic_type:        "jmsobject"
         script:               'createJmsQueueOrTopic.py'
         params:
            - "subDeploymentName = 'jmsServers'"
            - "jmsModuleName     = 'jmsClusterModule'"
            - "distributed       = 'true'"
            - "balancingPolicy   = 'Round-Robin'"
            - "deliveryDelay     = 2000"
            - "limit             = 3"
            - "timeToLive        = 300000"
      createJmsQueueforJmsModule:
         weblogic_object_name: "Queue1"
         params:
            - "jmsType           = 'queue'"
            - "jmsName           = 'Queue1'"
            - "jmsJNDIName       = 'jms/Queue1'"
            - "useRedirect       = 'true'"
            - "policy            = 'Redirect'"
            - "errorObject       = 'ErrorQueue'"
      createJmsQueueforJmsModule2:
         weblogic_object_name: "Queue2"
         params:
            - "jmsType           = 'queue'"
            - "jmsName           = 'Queue2'"
            - "jmsJNDIName       = 'jms/Queue2'"
            - "useLogRedirect    = 'true'"
            - "loggingPolicy     = '%header%,%properties%'"
      createJmsTopicforJmsModule:
         weblogic_object_name: "Topic1"
         params:
            - "jmsType           = 'topic'"
            - "jmsName           = 'Topic1'"
            - "jmsJNDIName       = 'jms/Topic1'"
